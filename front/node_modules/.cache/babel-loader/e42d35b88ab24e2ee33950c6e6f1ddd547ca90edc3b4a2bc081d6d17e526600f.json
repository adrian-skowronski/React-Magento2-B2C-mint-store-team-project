{"ast":null,"code":"import React,{useEffect,useState}from'react';import'./Header.scss';import'@fortawesome/fontawesome-free/css/all.min.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Header=()=>{const[storeViews,setStoreViews]=useState([]);const[currentStoreView,setCurrentStoreView]=useState('');const[fetchError,setFetchError]=useState('');useEffect(()=>{const fetchStoreViews=async()=>{const query=`\n                {\n                    availableStores {\n                        store_code\n                        store_name\n                        base_url\n                        base_link_url\n                        base_static_url\n                        base_media_url\n                        locale\n                    }\n                }\n            `;try{const response=await fetch('http://mint.local/graphql',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({query})});if(!response.ok){const responseText=await response.text();throw new Error(`Error fetching store views: ${responseText}`);}const data=await response.json();const availableStores=data.data.availableStores;const filteredStoreViews=availableStores.filter(storeView=>storeView.store_name!=='Admin');// Exclude \"Admin\"\nsetStoreViews(filteredStoreViews);const englishStoreView=filteredStoreViews.find(storeView=>storeView.store_name==='English');if(englishStoreView){setCurrentStoreView(englishStoreView.store_code);}else if(filteredStoreViews.length>0){setCurrentStoreView(filteredStoreViews[0].store_code);}}catch(error){if(error instanceof Error){console.error('Error fetching store views:',error);setFetchError(error.message);}else{console.error('Unexpected error:',error);setFetchError('An unknown error occurred');}}};fetchStoreViews();},[]);const handleStoreViewChange=event=>{setCurrentStoreView(event.target.value);};return/*#__PURE__*/_jsxs(\"header\",{className:\"header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-top\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"contact-info\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"phone\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-phone\"}),\" +(48) 123-456-789\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"email\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-envelope\"}),\" mint@contact.com\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"right-actions\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"storeview-select\",children:fetchError?/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:fetchError}):/*#__PURE__*/_jsx(\"select\",{value:currentStoreView,onChange:handleStoreViewChange,children:storeViews.length>0?storeViews.map(storeView=>/*#__PURE__*/_jsx(\"option\",{value:storeView.store_code,children:storeView.store_name},storeView.store_code)):/*#__PURE__*/_jsx(\"option\",{children:\"Loading store views...\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-actions\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-user\"}),/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-shopping-cart\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-bottom\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"logo\",children:/*#__PURE__*/_jsx(\"img\",{src:\"/assets/images/logo.png\",alt:\"Logo\"})}),/*#__PURE__*/_jsx(\"nav\",{className:\"navigation\",children:/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"/\",children:\"Home\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"/gold\",children:\"Gold\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"/silver\",children:\"Silver\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"/contact\",children:\"Contact\"})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"search\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"I am looking for...\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-search\"})})]})]})]});};export default Header;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","Header","storeViews","setStoreViews","currentStoreView","setCurrentStoreView","fetchError","setFetchError","fetchStoreViews","query","response","fetch","method","headers","body","JSON","stringify","ok","responseText","text","Error","data","json","availableStores","filteredStoreViews","filter","storeView","store_name","englishStoreView","find","store_code","length","error","console","message","handleStoreViewChange","event","target","value","className","children","onChange","map","src","alt","href","type","placeholder"],"sources":["/home/adrian-skowronski/www/mint/front/src/components/Header/Header.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Header.scss';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\ninterface StoreView {\n    store_code: string;\n    store_name: string;\n    base_url: string;\n    base_link_url: string;\n    base_static_url: string;\n    base_media_url: string;\n    locale: string;\n}\n\nconst Header = () => {\n    const [storeViews, setStoreViews] = useState<StoreView[]>([]);\n    const [currentStoreView, setCurrentStoreView] = useState<string>('');\n    const [fetchError, setFetchError] = useState<string>('');\n\n    useEffect(() => {\n        const fetchStoreViews = async () => {\n            const query = `\n                {\n                    availableStores {\n                        store_code\n                        store_name\n                        base_url\n                        base_link_url\n                        base_static_url\n                        base_media_url\n                        locale\n                    }\n                }\n            `;\n\n            try {\n                const response = await fetch('http://mint.local/graphql', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({ query }),\n                });\n\n                if (!response.ok) {\n                    const responseText = await response.text();\n                    throw new Error(`Error fetching store views: ${responseText}`);\n                }\n\n                const data = await response.json();\n                const availableStores = data.data.availableStores;\n\n                const filteredStoreViews: StoreView[] = availableStores.filter((storeView: StoreView) => storeView.store_name !== 'Admin'); // Exclude \"Admin\"\n\n                setStoreViews(filteredStoreViews);\n\n                const englishStoreView = filteredStoreViews.find(storeView => storeView.store_name === 'English');\n                if (englishStoreView) {\n                    setCurrentStoreView(englishStoreView.store_code);\n                } else if (filteredStoreViews.length > 0) {\n                    setCurrentStoreView(filteredStoreViews[0].store_code);\n                }\n\n            } catch (error: unknown) {\n                if (error instanceof Error) {\n                    console.error('Error fetching store views:', error);\n                    setFetchError(error.message);\n                } else {\n                    console.error('Unexpected error:', error);\n                    setFetchError('An unknown error occurred');\n                }\n            }\n        };\n\n        fetchStoreViews();\n    }, []);\n\n    const handleStoreViewChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        setCurrentStoreView(event.target.value);\n    };\n\n    return (\n        <header className=\"header\">\n            <div className=\"header-top\">\n                <div className=\"contact-info\">\n                    <span className=\"phone\"><i className=\"fas fa-phone\"></i> +(48) 123-456-789</span>\n                    <span className=\"email\"><i className=\"fas fa-envelope\"></i> mint@contact.com</span>\n                </div>\n\n                <div className=\"right-actions\">\n                    <div className=\"storeview-select\">\n                        {fetchError ? (\n                            <p className=\"error\">{fetchError}</p>\n                        ) : (\n                            <select value={currentStoreView} onChange={handleStoreViewChange}>\n                                {storeViews.length > 0 ? (\n                                    storeViews.map((storeView) => (\n                                        <option key={storeView.store_code} value={storeView.store_code}>\n                                            {storeView.store_name}\n                                        </option>\n                                    ))\n                                ) : (\n                                    <option>Loading store views...</option>\n                                )}\n                            </select>\n                        )}\n                    </div>\n\n                    <div className=\"user-actions\">\n                        <i className=\"fas fa-user\"></i>\n                        <i className=\"fas fa-shopping-cart\"></i>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"header-bottom\">\n                <div className=\"logo\">\n                    <img src=\"/assets/images/logo.png\" alt=\"Logo\" />\n                </div>\n                <nav className=\"navigation\">\n                    <ul>\n                        <li><a href=\"/\">Home</a></li>\n                        <li><a href=\"/gold\">Gold</a></li>\n                        <li><a href=\"/silver\">Silver</a></li>\n                        <li><a href=\"/contact\">Contact</a></li>\n                    </ul>\n                </nav>\n                <div className=\"search\">\n                    <input type=\"text\" placeholder=\"I am looking for...\" />\n                    <button type=\"submit\"><i className=\"fas fa-search\"></i></button>\n                </div>\n            </div>\n        </header>\n    );\n};\n\nexport default Header;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}