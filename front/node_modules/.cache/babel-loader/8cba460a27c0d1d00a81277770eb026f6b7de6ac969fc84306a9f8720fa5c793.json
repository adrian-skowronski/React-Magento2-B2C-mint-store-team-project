{"ast":null,"code":"var _jsxFileName = \"/home/adrian-skowronski/www/mint/front/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AUTH_URL = '/graphql'; // URL endpointu GraphQL\n\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const checkSession = async () => {\n    try {\n      const response = await fetch(AUTH_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n          // Dodaj tutaj autoryzację, jeśli jest wymagana\n          // np. 'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          query: `\n                        query {\n                            customer {\n                                firstname\n                            }\n                        }\n                    `\n        })\n      });\n      const result = await response.json();\n\n      // Jeśli serwer zwróci dane użytkownika, ustaw `isLoggedIn` na true\n      if (result.data && result.data.customer) {\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n    } catch (error) {\n      console.error(\"Błąd podczas sprawdzania sesji użytkownika:\", error);\n      setIsLoggedIn(false);\n    }\n  };\n  useEffect(() => {\n    checkSession();\n  }, []);\n  const login = () => setIsLoggedIn(true);\n  const logout = () => setIsLoggedIn(false);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","AUTH_URL","AuthContext","undefined","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","checkSession","response","fetch","method","headers","body","JSON","stringify","query","result","json","data","customer","error","console","login","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/home/adrian-skowronski/www/mint/front/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\n\nconst AUTH_URL = '/graphql';  // URL endpointu GraphQL\n\ninterface AuthContextType {\n    isLoggedIn: boolean;\n    login: () => void;\n    logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    const checkSession = async () => {\n        try {\n            const response = await fetch(AUTH_URL, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    // Dodaj tutaj autoryzację, jeśli jest wymagana\n                    // np. 'Authorization': `Bearer ${token}`\n                },\n                body: JSON.stringify({\n                    query: `\n                        query {\n                            customer {\n                                firstname\n                            }\n                        }\n                    `,\n                }),\n            });\n\n            const result = await response.json();\n\n            // Jeśli serwer zwróci dane użytkownika, ustaw `isLoggedIn` na true\n            if (result.data && result.data.customer) {\n                setIsLoggedIn(true);\n            } else {\n                setIsLoggedIn(false);\n            }\n        } catch (error) {\n            console.error(\"Błąd podczas sprawdzania sesji użytkownika:\", error);\n            setIsLoggedIn(false);\n        }\n    };\n\n    useEffect(() => {\n        checkSession();\n    }, []);\n\n    const login = () => setIsLoggedIn(true);\n    const logout = () => setIsLoggedIn(false);\n\n    return (\n        <AuthContext.Provider value={{ isLoggedIn, login, logout }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (!context) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzF,MAAMC,QAAQ,GAAG,UAAU,CAAC,CAAE;;AAQ9B,MAAMC,WAAW,gBAAGP,aAAa,CAA8BQ,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAA+C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7E,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACV,QAAQ,EAAE;QACnCW,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;UAChB;UACA;QACJ,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,KAAK,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;QACgB,CAAC;MACL,CAAC,CAAC;MAEF,MAAMC,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;;MAEpC;MACA,IAAID,MAAM,CAACE,IAAI,IAAIF,MAAM,CAACE,IAAI,CAACC,QAAQ,EAAE;QACrCb,aAAa,CAAC,IAAI,CAAC;MACvB,CAAC,MAAM;QACHA,aAAa,CAAC,KAAK,CAAC;MACxB;IACJ,CAAC,CAAC,OAAOc,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;MACnEd,aAAa,CAAC,KAAK,CAAC;IACxB;EACJ,CAAC;EAEDX,SAAS,CAAC,MAAM;IACZY,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMe,KAAK,GAAGA,CAAA,KAAMhB,aAAa,CAAC,IAAI,CAAC;EACvC,MAAMiB,MAAM,GAAGA,CAAA,KAAMjB,aAAa,CAAC,KAAK,CAAC;EAEzC,oBACIR,OAAA,CAACE,WAAW,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAAEpB,UAAU;MAAEiB,KAAK;MAAEC;IAAO,CAAE;IAAApB,QAAA,EACtDA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACzB,EAAA,CAjDWF,YAA+C;AAAA4B,EAAA,GAA/C5B,YAA+C;AAmD5D,OAAO,MAAM6B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,MAAMC,OAAO,GAAGvC,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAACiC,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAClE;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}