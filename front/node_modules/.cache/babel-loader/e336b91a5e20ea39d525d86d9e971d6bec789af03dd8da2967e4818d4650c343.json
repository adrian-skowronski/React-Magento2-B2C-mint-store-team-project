{"ast":null,"code":"var _jsxFileName = \"/home/adrian-skowronski/www/mint/front/src/pages/Checkout/ShippingPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useCart } from '../../context/CartContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShippingForm = () => {\n  _s();\n  const {\n    setShippingAddress\n  } = useCart();\n  const [address, setAddress] = useState({\n    firstName: '',\n    lastName: '',\n    street: '',\n    city: '',\n    postalCode: '',\n    regionCode: '',\n    // Dodajemy pole na kod regionu\n    telephone: ''\n  });\n  const navigate = useNavigate();\n\n  // Lista dostępnych regionów (województw)\n  const regions = [{\n    code: \"PL-02\",\n    name: \"dolnośląskie\"\n  }, {\n    code: \"PL-04\",\n    name: \"kujawsko-pomorskie\"\n  }, {\n    code: \"PL-06\",\n    name: \"lubelskie\"\n  }, {\n    code: \"PL-08\",\n    name: \"lubuskie\"\n  }, {\n    code: \"PL-14\",\n    name: \"mazowieckie\"\n  }, {\n    code: \"PL-12\",\n    name: \"małopolskie\"\n  }, {\n    code: \"PL-16\",\n    name: \"opolskie\"\n  }, {\n    code: \"PL-18\",\n    name: \"podkarpackie\"\n  }, {\n    code: \"PL-20\",\n    name: \"podlaskie\"\n  }, {\n    code: \"PL-22\",\n    name: \"pomorskie\"\n  }, {\n    code: \"PL-24\",\n    name: \"śląskie\"\n  }, {\n    code: \"PL-26\",\n    name: \"świętokrzyskie\"\n  }, {\n    code: \"PL-28\",\n    name: \"warmińsko-mazurskie\"\n  }, {\n    code: \"PL-30\",\n    name: \"wielkopolskie\"\n  }, {\n    code: \"PL-32\",\n    name: \"zachodniopomorskie\"\n  }, {\n    code: \"PL-10\",\n    name: \"łódzkie\"\n  }];\n  const handleChange = e => {\n    setAddress({\n      ...address,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Ustawiamy statycznie kraj na „Polska” i przekazujemy region\n      await setShippingAddress({\n        ...address,\n        country: \"PL\",\n        // Ustawiamy kod kraju na PL\n        regionCode: address.regionCode\n      });\n      navigate('/payment');\n    } catch (error) {\n      console.error(\"Wystąpił błąd podczas ustawiania adresu:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"shipping-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Adres dostawy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"firstName\",\n      placeholder: \"Imi\\u0119\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"lastName\",\n      placeholder: \"Nazwisko\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"street\",\n      placeholder: \"Adres\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"city\",\n      placeholder: \"Miasto\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"postalCode\",\n      placeholder: \"Kod pocztowy\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"regionCode\",\n      children: \"Wojew\\xF3dztwo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"regionCode\",\n      id: \"regionCode\",\n      onChange: handleChange,\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Wybierz wojew\\xF3dztwo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), regions.map(region => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: region.code,\n        children: region.name\n      }, region.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"tel\",\n      name: \"telephone\",\n      placeholder: \"Telefon\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Przejd\\u017A do p\\u0142atno\\u015Bci\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(ShippingForm, \"DbPuDKmCuunEnrOtfHwWk9txBFw=\", false, function () {\n  return [useCart, useNavigate];\n});\n_c = ShippingForm;\nexport default ShippingForm;\nvar _c;\n$RefreshReg$(_c, \"ShippingForm\");","map":{"version":3,"names":["React","useState","useCart","useNavigate","jsxDEV","_jsxDEV","ShippingForm","_s","setShippingAddress","address","setAddress","firstName","lastName","street","city","postalCode","regionCode","telephone","navigate","regions","code","name","handleChange","e","target","value","handleSubmit","preventDefault","country","error","console","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","htmlFor","id","map","region","_c","$RefreshReg$"],"sources":["/home/adrian-skowronski/www/mint/front/src/pages/Checkout/ShippingPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useCart } from '../../context/CartContext';\nimport { useNavigate } from 'react-router-dom';\n\nconst ShippingForm: React.FC = () => {\n    const { setShippingAddress } = useCart();\n    const [address, setAddress] = useState({\n        firstName: '',\n        lastName: '',\n        street: '',\n        city: '',\n        postalCode: '',\n        regionCode: '', // Dodajemy pole na kod regionu\n        telephone: '',\n    });\n\n    const navigate = useNavigate();\n\n    // Lista dostępnych regionów (województw)\n    const regions = [\n        { code: \"PL-02\", name: \"dolnośląskie\" },\n        { code: \"PL-04\", name: \"kujawsko-pomorskie\" },\n        { code: \"PL-06\", name: \"lubelskie\" },\n        { code: \"PL-08\", name: \"lubuskie\" },\n        { code: \"PL-14\", name: \"mazowieckie\" },\n        { code: \"PL-12\", name: \"małopolskie\" },\n        { code: \"PL-16\", name: \"opolskie\" },\n        { code: \"PL-18\", name: \"podkarpackie\" },\n        { code: \"PL-20\", name: \"podlaskie\" },\n        { code: \"PL-22\", name: \"pomorskie\" },\n        { code: \"PL-24\", name: \"śląskie\" },\n        { code: \"PL-26\", name: \"świętokrzyskie\" },\n        { code: \"PL-28\", name: \"warmińsko-mazurskie\" },\n        { code: \"PL-30\", name: \"wielkopolskie\" },\n        { code: \"PL-32\", name: \"zachodniopomorskie\" },\n        { code: \"PL-10\", name: \"łódzkie\" },\n    ];\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        setAddress({\n            ...address,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        try {\n            // Ustawiamy statycznie kraj na „Polska” i przekazujemy region\n            await setShippingAddress({\n                ...address,\n                country: \"PL\", // Ustawiamy kod kraju na PL\n                regionCode: address.regionCode,\n            });\n            navigate('/payment');\n        } catch (error) {\n            console.error(\"Wystąpił błąd podczas ustawiania adresu:\", error);\n        }\n    };\n\n    return (\n        <form className=\"shipping-form\" onSubmit={handleSubmit}>\n            <h3>Adres dostawy</h3>\n            <input type=\"text\" name=\"firstName\" placeholder=\"Imię\" onChange={handleChange} required />\n            <input type=\"text\" name=\"lastName\" placeholder=\"Nazwisko\" onChange={handleChange} required />\n            <input type=\"text\" name=\"street\" placeholder=\"Adres\" onChange={handleChange} required />\n            <input type=\"text\" name=\"city\" placeholder=\"Miasto\" onChange={handleChange} required />\n            <input type=\"text\" name=\"postalCode\" placeholder=\"Kod pocztowy\" onChange={handleChange} required />\n\n            {/* Dropdown do wyboru regionu */}\n            <label htmlFor=\"regionCode\">Województwo</label>\n            <select name=\"regionCode\" id=\"regionCode\" onChange={handleChange} required>\n                <option value=\"\">Wybierz województwo</option>\n                {regions.map(region => (\n                    <option key={region.code} value={region.code}>\n                        {region.name}\n                    </option>\n                ))}\n            </select>\n\n            <input type=\"tel\" name=\"telephone\" placeholder=\"Telefon\" onChange={handleChange} required />\n            <button type=\"submit\">Przejdź do płatności</button>\n        </form>\n    );\n};\n\nexport default ShippingForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}