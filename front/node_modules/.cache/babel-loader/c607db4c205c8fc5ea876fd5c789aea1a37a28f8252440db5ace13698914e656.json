{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useCart } from '../../context/CartContext';\n// import { useNavigate } from 'react-router-dom';\n//\n// interface ShippingAddress {\n//     firstName: string;\n//     lastName: string;\n//     street: string[]; // Typ: tablica łańcuchów\n//     city: string;\n//     region: string;\n//     regionCode: string;\n//     postalCode: string;\n//     country: string;\n//     countryCode: string;\n//     telephone: string;\n//     saveInAddressBook?: boolean;\n// }\n//\n// const ShippingForm: React.FC = () => {\n//     const { setShippingAddress } = useCart();\n//     const [address, setAddress] = useState<ShippingAddress>({\n//         firstName: '',\n//         lastName: '',\n//         street: [], // Inicjalizowane jako pustą tablicą\n//         city: '',\n//         region: '',\n//         regionCode: '',\n//         postalCode: '',\n//         country: 'Polska',\n//         countryCode: 'PL',\n//         telephone: '',\n//         saveInAddressBook: false,\n//     });\n//\n//     const navigate = useNavigate();\n//\n//     const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n//         setAddress({\n//             ...address,\n//             [e.target.name]: e.target.value\n//         });\n//     };\n//\n//     const handleSubmit = async (e: React.FormEvent) => {\n//         e.preventDefault();\n//         try {\n//             // Przygotowanie obiektu z poprawnym typem `string[]` dla `street`:\n//             const addressWithArrayStreet: ShippingAddress = {\n//                 ...address,\n//                 street: Array.isArray(address.street) ? address.street : [address.street], // Jeśli address.street nie jest tablicą, zamień ją na tablicę\n//             };\n//\n//             await setShippingAddress(addressWithArrayStreet); // Przekazanie adresu do setShippingAddress\n//             navigate('/payment');\n//         } catch (error) {\n//             console.error(\"Wystąpił błąd podczas ustawiania adresu:\", error);\n//         }\n//     };\n//\n//     return (\n//         <form className=\"shipping-form\" onSubmit={handleSubmit}>\n//             <h3>Adres dostawy</h3>\n//             <input\n//                 type=\"text\"\n//                 name=\"firstName\"\n//                 placeholder=\"Imię\"\n//                 onChange={handleChange}\n//                 required\n//             />\n//             <input\n//                 type=\"text\"\n//                 name=\"lastName\"\n//                 placeholder=\"Nazwisko\"\n//                 onChange={handleChange}\n//                 required\n//             />\n//             <input\n//                 type=\"text\"\n//                 name=\"street\"\n//                 placeholder=\"Adres (ulica)\"\n//                 onChange={(e) => {\n//                     setAddress({\n//                         ...address,\n//                         street: e.target.value ? [e.target.value] : [] // Zaktualizowane pole street jako tablica\n//                     });\n//                 }}\n//                 required\n//             />\n//             <input\n//                 type=\"text\"\n//                 name=\"city\"\n//                 placeholder=\"Miasto\"\n//                 onChange={handleChange}\n//                 required\n//             />\n//             <select name=\"regionCode\" onChange={handleChange} required>\n//                 <option value=\"\">Wybierz województwo</option>\n//                 <option value=\"PL-02\">dolnośląskie</option>\n//                 <option value=\"PL-04\">kujawsko-pomorskie</option>\n//                 <option value=\"PL-06\">lubelskie</option>\n//                 <option value=\"PL-08\">lubuskie</option>\n//                 <option value=\"PL-14\">mazowieckie</option>\n//                 <option value=\"PL-12\">małopolskie</option>\n//                 <option value=\"PL-16\">opolskie</option>\n//                 <option value=\"PL-18\">podkarpackie</option>\n//                 <option value=\"PL-20\">podlaskie</option>\n//                 <option value=\"PL-22\">pomorskie</option>\n//                 <option value=\"PL-24\">śląskie</option>\n//                 <option value=\"PL-26\">świętokrzyskie</option>\n//                 <option value=\"PL-28\">warmińsko-mazurskie</option>\n//                 <option value=\"PL-30\">wielkopolskie</option>\n//                 <option value=\"PL-32\">zachodniopomorskie</option>\n//                 <option value=\"PL-10\">łódzkie</option>\n//             </select>\n//             <input\n//                 type=\"text\"\n//                 name=\"postalCode\"\n//                 placeholder=\"Kod pocztowy\"\n//                 onChange={handleChange}\n//                 required\n//             />\n//             <input\n//                 type=\"text\"\n//                 name=\"telephone\"\n//                 placeholder=\"Telefon\"\n//                 onChange={handleChange}\n//                 required\n//             />\n//             <input\n//                 type=\"checkbox\"\n//                 name=\"saveInAddressBook\"\n//                 onChange={(e) =>\n//                     setAddress({\n//                         ...address,\n//                         saveInAddressBook: e.target.checked,\n//                     })\n//                 }\n//             />{\" \"}\n//             Zapisz w książce adresowej\n//             <button type=\"submit\">Przejdź do płatności</button>\n//         </form>\n//     );\n// };\n//\n// export default ShippingForm;","map":{"version":3,"names":[],"sources":["/home/adrian-skowronski/www/mint/front/src/pages/Checkout/ShippingPage.tsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useCart } from '../../context/CartContext';\n// import { useNavigate } from 'react-router-dom';\n//\n// interface ShippingAddress {\n//     firstName: string;\n//     lastName: string;\n//     street: string[]; // Typ: tablica łańcuchów\n//     city: string;\n//     region: string;\n//     regionCode: string;\n//     postalCode: string;\n//     country: string;\n//     countryCode: string;\n//     telephone: string;\n//     saveInAddressBook?: boolean;\n// }\n//\n// const ShippingForm: React.FC = () => {\n//     const { setShippingAddress } = useCart();\n//     const [address, setAddress] = useState<ShippingAddress>({\n//         firstName: '',\n//         lastName: '',\n//         street: [], // Inicjalizowane jako pustą tablicą\n//         city: '',\n//         region: '',\n//         regionCode: '',\n//         postalCode: '',\n//         country: 'Polska',\n//         countryCode: 'PL',\n//         telephone: '',\n//         saveInAddressBook: false,\n//     });\n//\n//     const navigate = useNavigate();\n//\n//     const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n//         setAddress({\n//             ...address,\n//             [e.target.name]: e.target.value\n//         });\n//     };\n//\n//     const handleSubmit = async (e: React.FormEvent) => {\n//         e.preventDefault();\n//         try {\n//             // Przygotowanie obiektu z poprawnym typem `string[]` dla `street`:\n//             const addressWithArrayStreet: ShippingAddress = {\n//                 ...address,\n//                 street: Array.isArray(address.street) ? address.street : [address.street], // Jeśli address.street nie jest tablicą, zamień ją na tablicę\n//             };\n//\n//             await setShippingAddress(addressWithArrayStreet); // Przekazanie adresu do setShippingAddress\n//             navigate('/payment');\n//         } catch (error) {\n//             console.error(\"Wystąpił błąd podczas ustawiania adresu:\", error);\n//         }\n//     };\n//\n//     return (\n//         <form className=\"shipping-form\" onSubmit={handleSubmit}>\n//             <h3>Adres dostawy</h3>\n//             <input\n//                 type=\"text\"\n//                 name=\"firstName\"\n//                 placeholder=\"Imię\"\n//                 onChange={handleChange}\n//                 required\n//             />\n//             <input\n//                 type=\"text\"\n//                 name=\"lastName\"\n//                 placeholder=\"Nazwisko\"\n//                 onChange={handleChange}\n//                 required\n//             />\n//             <input\n//                 type=\"text\"\n//                 name=\"street\"\n//                 placeholder=\"Adres (ulica)\"\n//                 onChange={(e) => {\n//                     setAddress({\n//                         ...address,\n//                         street: e.target.value ? [e.target.value] : [] // Zaktualizowane pole street jako tablica\n//                     });\n//                 }}\n//                 required\n//             />\n//             <input\n//                 type=\"text\"\n//                 name=\"city\"\n//                 placeholder=\"Miasto\"\n//                 onChange={handleChange}\n//                 required\n//             />\n//             <select name=\"regionCode\" onChange={handleChange} required>\n//                 <option value=\"\">Wybierz województwo</option>\n//                 <option value=\"PL-02\">dolnośląskie</option>\n//                 <option value=\"PL-04\">kujawsko-pomorskie</option>\n//                 <option value=\"PL-06\">lubelskie</option>\n//                 <option value=\"PL-08\">lubuskie</option>\n//                 <option value=\"PL-14\">mazowieckie</option>\n//                 <option value=\"PL-12\">małopolskie</option>\n//                 <option value=\"PL-16\">opolskie</option>\n//                 <option value=\"PL-18\">podkarpackie</option>\n//                 <option value=\"PL-20\">podlaskie</option>\n//                 <option value=\"PL-22\">pomorskie</option>\n//                 <option value=\"PL-24\">śląskie</option>\n//                 <option value=\"PL-26\">świętokrzyskie</option>\n//                 <option value=\"PL-28\">warmińsko-mazurskie</option>\n//                 <option value=\"PL-30\">wielkopolskie</option>\n//                 <option value=\"PL-32\">zachodniopomorskie</option>\n//                 <option value=\"PL-10\">łódzkie</option>\n//             </select>\n//             <input\n//                 type=\"text\"\n//                 name=\"postalCode\"\n//                 placeholder=\"Kod pocztowy\"\n//                 onChange={handleChange}\n//                 required\n//             />\n//             <input\n//                 type=\"text\"\n//                 name=\"telephone\"\n//                 placeholder=\"Telefon\"\n//                 onChange={handleChange}\n//                 required\n//             />\n//             <input\n//                 type=\"checkbox\"\n//                 name=\"saveInAddressBook\"\n//                 onChange={(e) =>\n//                     setAddress({\n//                         ...address,\n//                         saveInAddressBook: e.target.checked,\n//                     })\n//                 }\n//             />{\" \"}\n//             Zapisz w książce adresowej\n//             <button type=\"submit\">Przejdź do płatności</button>\n//         </form>\n//     );\n// };\n//\n// export default ShippingForm;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}