{"ast":null,"code":"var _jsxFileName = \"/home/adrian-skowronski/www/mint/front/src/pages/Checkout/Checkout.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Checkout.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checkout = () => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [cartId, setCartId] = useState(null);\n  const fetchCartId = async () => {\n    try {\n      const response = await fetch('https://mint.local/graphql', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: `\n                    mutation {\n                        createEmptyCart\n                    }\n                    `\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.errors) {\n        console.error(\"GraphQL errors:\", data.errors);\n        return;\n      }\n      setCartId(data.data.createEmptyCart);\n    } catch (error) {\n      console.error(\"Fetch error:\", error);\n    }\n  };\n  const fetchCartItems = async () => {\n    if (!cartId) return;\n    try {\n      const response = await fetch('https://mint.local/graphql', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: `\n                    query {\n                        cart(cart_id: \"${cartId}\") {\n                            items {\n                                product {\n                                    name\n                                    sku\n                                    prices {\n                                        regularPrice {\n                                            amount {\n                                                value\n                                                currency\n                                            }\n                                        }\n                                    }\n                                }\n                                quantity\n                            }\n                        }\n                    }\n                    `\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.errors) {\n        console.error(\"GraphQL errors:\", data.errors);\n        return;\n      }\n      setCartItems(data.data.cart.items);\n    } catch (error) {\n      console.error(\"Fetch error:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchCartId();\n  }, []);\n  useEffect(() => {\n    fetchCartItems();\n  }, [cartId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checkout\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-items\",\n      children: cartItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"SKU: \", item.product.sku]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Quantity: \", item.quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: \", item.product.prices.regularPrice.amount.value, item.product.prices.regularPrice.amount.currency]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n_s(Checkout, \"5D/ge+lSOzytv6Wfri3Mer7c6j8=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Checkout","_s","cartItems","setCartItems","cartId","setCartId","fetchCartId","response","fetch","method","headers","body","JSON","stringify","query","ok","Error","status","data","json","errors","console","error","createEmptyCart","fetchCartItems","cart","items","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","product","name","sku","quantity","prices","regularPrice","amount","value","currency","_c","$RefreshReg$"],"sources":["/home/adrian-skowronski/www/mint/front/src/pages/Checkout/Checkout.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Checkout.scss';\n\ninterface CartItem {\n    product: {\n        name: string;\n        sku: string;\n        prices: {\n            regularPrice: {\n                amount: {\n                    value: number;\n                    currency: string;\n                };\n            };\n        };\n    };\n    quantity: number;\n}\n\nconst Checkout: React.FC = () => {\n    const [cartItems, setCartItems] = useState<CartItem[]>([]);\n    const [cartId, setCartId] = useState<string | null>(null);\n\n    const fetchCartId = async () => {\n        try {\n            const response = await fetch('https://mint.local/graphql', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    query: `\n                    mutation {\n                        createEmptyCart\n                    }\n                    `,\n                }),\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! Status: ${response.status}`);\n            }\n\n            const data = await response.json();\n            if (data.errors) {\n                console.error(\"GraphQL errors:\", data.errors);\n                return;\n            }\n\n            setCartId(data.data.createEmptyCart);\n        } catch (error) {\n            console.error(\"Fetch error:\", error);\n        }\n    };\n\n    const fetchCartItems = async () => {\n        if (!cartId) return;\n\n        try {\n            const response = await fetch('https://mint.local/graphql', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    query: `\n                    query {\n                        cart(cart_id: \"${cartId}\") {\n                            items {\n                                product {\n                                    name\n                                    sku\n                                    prices {\n                                        regularPrice {\n                                            amount {\n                                                value\n                                                currency\n                                            }\n                                        }\n                                    }\n                                }\n                                quantity\n                            }\n                        }\n                    }\n                    `,\n                }),\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! Status: ${response.status}`);\n            }\n\n            const data = await response.json();\n            if (data.errors) {\n                console.error(\"GraphQL errors:\", data.errors);\n                return;\n            }\n\n            setCartItems(data.data.cart.items);\n        } catch (error) {\n            console.error(\"Fetch error:\", error);\n        }\n    };\n\n    useEffect(() => {\n        fetchCartId();\n    }, []);\n\n    useEffect(() => {\n        fetchCartItems();\n    }, [cartId]);\n\n    return (\n        <div className=\"checkout\">\n            <h1>Checkout</h1>\n            <div className=\"cart-items\">\n                {cartItems.map((item, index) => (\n                    <div key={index} className=\"cart-item\">\n                        <p>{item.product.name}</p>\n                        <p>SKU: {item.product.sku}</p>\n                        <p>Quantity: {item.quantity}</p>\n                        <p>\n                            Price: {item.product.prices.regularPrice.amount.value}\n                            {item.product.prices.regularPrice.amount.currency}\n                        </p>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Checkout;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}