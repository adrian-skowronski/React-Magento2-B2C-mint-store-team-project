{"ast":null,"code":"var _jsxFileName = \"/home/adrian-skowronski/www/mint/front/src/components/Recommendation/Recommendation.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Recommendation.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recommendation = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      const query = `\n                {\n                    products(search: \"\") {\n                        items {\n                            id\n                            name\n                            price {\n                                regularPrice {\n                                    amount {\n                                        value\n                                        currency\n                                    }\n                                }\n                            }\n                            small_image {\n                                url\n                                label\n                            }\n                        }\n                        total_count\n                        page_info {\n                            page_size\n                            current_page\n                        }\n                    }\n                }\n            `;\n      try {\n        const response = await fetch('http://mint.local/graphql', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            query\n          })\n        });\n        const errorText = await response.text(); // Pobierz tekst błędu\n        throw new Error(`Network response was not ok: ${response.status} ${errorText}`);\n        const data = await response.json();\n        console.log(data); // Logowanie odpowiedzi\n        setProducts(data.data.products.items);\n      } catch (err) {\n        console.error('Fetch error:', err); // Logowanie błędu\n        if (err instanceof Error) {\n          setError(err.message);\n        } else {\n          setError('An unknown error occurred');\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProducts();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recommendationSection\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-container\",\n      children: products.map(product => {\n        var _product$price$regula, _product$price$regula2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-card\",\n          children: [product.small_image && product.small_image.url ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: product.small_image.url,\n            alt: product.small_image.label,\n            className: \"product-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No image available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), product.price && product.price.regularPrice ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: \", (_product$price$regula = product.price.regularPrice.amount) === null || _product$price$regula === void 0 ? void 0 : _product$price$regula.value, \" \", (_product$price$regula2 = product.price.regularPrice.amount) === null || _product$price$regula2 === void 0 ? void 0 : _product$price$regula2.currency]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Price not available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this)]\n        }, product.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n_s(Recommendation, \"3+N/VFIgZOBgubN9oS5aTzm2qqY=\");\n_c = Recommendation;\nexport default Recommendation;\nvar _c;\n$RefreshReg$(_c, \"Recommendation\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Recommendation","_s","products","setProducts","loading","setLoading","error","setError","fetchProducts","query","response","fetch","method","headers","body","JSON","stringify","errorText","text","Error","status","data","json","console","log","items","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","product","_product$price$regula","_product$price$regula2","small_image","url","src","alt","label","name","price","regularPrice","amount","value","currency","id","_c","$RefreshReg$"],"sources":["/home/adrian-skowronski/www/mint/front/src/components/Recommendation/Recommendation.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Recommendation.scss';\n\ninterface Product {\n    id: number;\n    name: string;\n    price?: {\n        regularPrice?: {\n            amount?: {\n                value?: number;\n                currency?: string;\n            };\n        };\n    };\n    small_image?: {\n        url?: string;\n        label?: string;\n    };\n}\n\nconst Recommendation: React.FC = () => {\n    const [products, setProducts] = useState<Product[]>([]);\n    const [loading, setLoading] = useState<boolean>(true);\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        const fetchProducts = async () => {\n            const query = `\n                {\n                    products(search: \"\") {\n                        items {\n                            id\n                            name\n                            price {\n                                regularPrice {\n                                    amount {\n                                        value\n                                        currency\n                                    }\n                                }\n                            }\n                            small_image {\n                                url\n                                label\n                            }\n                        }\n                        total_count\n                        page_info {\n                            page_size\n                            current_page\n                        }\n                    }\n                }\n            `;\n\n            try {\n                const response = await fetch('http://mint.local/graphql', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({ query }),\n                });\n\n                const errorText = await response.text(); // Pobierz tekst błędu\n                throw new Error(`Network response was not ok: ${response.status} ${errorText}`);\n\n                const data = await response.json();\n                console.log(data); // Logowanie odpowiedzi\n                setProducts(data.data.products.items);\n            } catch (err: unknown) {\n                console.error('Fetch error:', err); // Logowanie błędu\n                if (err instanceof Error) {\n                    setError(err.message);\n                } else {\n                    setError('An unknown error occurred');\n                }\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchProducts();\n    }, []);\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    if (error) {\n        return <div>Error: {error}</div>;\n    }\n\n    return (\n        <div className=\"recommendationSection\">\n            <h1>Recommendations</h1>\n            <div className=\"product-container\">\n                {products.map(product => (\n                    <div key={product.id} className=\"product-card\">\n                        {product.small_image && product.small_image.url ? (\n                            <img src={product.small_image.url} alt={product.small_image.label} className=\"product-image\" />\n                        ) : (\n                            <p>No image available</p>\n                        )}\n                        <h2>{product.name}</h2>\n                        {product.price && product.price.regularPrice ? (\n                            <p>\n                                Price: {product.price.regularPrice.amount?.value} {product.price.regularPrice.amount?.currency}\n                            </p>\n                        ) : (\n                            <p>Price not available</p>\n                        )}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Recommendation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}