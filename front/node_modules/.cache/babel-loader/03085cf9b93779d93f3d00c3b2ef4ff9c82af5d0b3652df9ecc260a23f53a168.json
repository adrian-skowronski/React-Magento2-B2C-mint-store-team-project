{"ast":null,"code":"import _regeneratorRuntime from \"/home/adrian-skowronski/www/mint/front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/adrian-skowronski/www/mint/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/home/adrian-skowronski/www/mint/front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/home/adrian-skowronski/www/mint/front/src/components/WishlistButton/WishlistButton.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar WishlistButton = function WishlistButton(_ref) {\n  _s();\n  var productId = _ref.productId,\n    sku = _ref.sku,\n    wishlistId = _ref.wishlistId,\n    favorites = _ref.favorites,\n    toggleFavorite = _ref.toggleFavorite;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setMessage = _useState2[1];\n  var handleAddToWishlist = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var token, mutation, response;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            token = sessionStorage.getItem('auth_token');\n            if (token) {\n              _context.next = 5;\n              break;\n            }\n            setMessage('Musisz być zalogowany, aby dodać produkt do listy życzeń.');\n            setTimeout(function () {\n              return setMessage(null);\n            }, 3000);\n            return _context.abrupt(\"return\");\n          case 5:\n            if (!wishlistId) {\n              _context.next = 21;\n              break;\n            }\n            mutation = \"\\n                mutation {\\n                    addProductsToWishlist(\\n                        wishlistId: \".concat(wishlistId, \"\\n                        wishlistItems: [\\n                            { sku: \\\"\").concat(sku, \"\\\", quantity: 1 }\\n                        ]\\n                    ) {\\n                        wishlist {\\n                            id\\n                            items_count\\n                        }\\n                    }\\n                }\\n            \");\n            _context.prev = 7;\n            _context.next = 10;\n            return fetch('http://mint.local/graphql', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"Bearer \".concat(token)\n              },\n              body: JSON.stringify({\n                query: mutation\n              })\n            });\n          case 10:\n            response = _context.sent;\n            if (response.ok) {\n              setMessage('Produkt został dodany do listy życzeń!');\n              toggleFavorite(productId);\n            } else {\n              setMessage('Wystąpił błąd przy dodawaniu do listy życzeń.');\n            }\n            _context.next = 18;\n            break;\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](7);\n            console.error(\"Błąd podczas dodawania do wishlisty:\", _context.t0);\n            setMessage('Wystąpił błąd przy dodawaniu do listy życzeń.');\n          case 18:\n            _context.prev = 18;\n            setTimeout(function () {\n              return setMessage(null);\n            }, 3000);\n            return _context.finish(18);\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[7, 14, 18, 21]]);\n    }));\n    return function handleAddToWishlist() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"icon-heart \".concat(favorites.includes(productId) ? 'active' : ''),\n      onClick: handleAddToWishlist,\n      children: \"\\u2665\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, _this);\n};\n_s(WishlistButton, \"oxT8SEz5FIjvFP5ix50Ku0sapH4=\");\n_c = WishlistButton;\nexport default WishlistButton;\nvar _c;\n$RefreshReg$(_c, \"WishlistButton\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","WishlistButton","_ref","_s","productId","sku","wishlistId","favorites","toggleFavorite","_useState","_useState2","_slicedToArray","message","setMessage","handleAddToWishlist","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","mutation","response","wrap","_callee$","_context","prev","next","sessionStorage","getItem","setTimeout","abrupt","concat","fetch","method","headers","body","JSON","stringify","query","sent","ok","t0","console","error","finish","stop","apply","arguments","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_this","includes","onClick","_c","$RefreshReg$"],"sources":["/home/adrian-skowronski/www/mint/front/src/components/WishlistButton/WishlistButton.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ninterface WishlistButtonProps {\n    productId: number;\n    sku: string;\n    wishlistId: number | null;\n    favorites: number[];\n    toggleFavorite: (productId: number) => void;\n}\n\nconst WishlistButton: React.FC<WishlistButtonProps> = ({ productId, sku, wishlistId, favorites, toggleFavorite }) => {\n    const [message, setMessage] = useState<string | null>(null);\n\n    const handleAddToWishlist = async () => {\n        const token = sessionStorage.getItem('auth_token');\n        if (!token) {\n            setMessage('Musisz być zalogowany, aby dodać produkt do listy życzeń.');\n            setTimeout(() => setMessage(null), 3000);\n            return;\n        }\n\n        if (wishlistId) {\n            const mutation = `\n                mutation {\n                    addProductsToWishlist(\n                        wishlistId: ${wishlistId}\n                        wishlistItems: [\n                            { sku: \"${sku}\", quantity: 1 }\n                        ]\n                    ) {\n                        wishlist {\n                            id\n                            items_count\n                        }\n                    }\n                }\n            `;\n\n            try {\n                const response = await fetch('http://mint.local/graphql', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Bearer ${token}`,\n                    },\n                    body: JSON.stringify({ query: mutation }),\n                });\n\n                if (response.ok) {\n                    setMessage('Produkt został dodany do listy życzeń!');\n                    toggleFavorite(productId);\n                } else {\n                    setMessage('Wystąpił błąd przy dodawaniu do listy życzeń.');\n                }\n            } catch (error) {\n                console.error(\"Błąd podczas dodawania do wishlisty:\", error);\n                setMessage('Wystąpił błąd przy dodawaniu do listy życzeń.');\n            } finally {\n                setTimeout(() => setMessage(null), 3000);\n            }\n        }\n    };\n\n    return (\n        <div>\n            {message && <div className=\"notification\">{message}</div>}\n            <span\n                className={`icon-heart ${favorites.includes(productId) ? 'active' : ''}`}\n                onClick={handleAddToWishlist}\n            >\n                ♥\n            </span>\n        </div>\n    );\n};\n\nexport default WishlistButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}